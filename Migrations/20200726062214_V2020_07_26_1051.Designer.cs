// <auto-generated />
using System;
using EFCorePgExercises.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCorePgExercises.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200726062214_V2020_07_26_1051")]
    partial class V2020_07_26_1051
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCorePgExercises.Entities.Booking", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 0)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacId")
                        .HasColumnType("int");

                    b.Property<int>("MemId")
                        .HasColumnType("int");

                    b.Property<int>("Slots")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BookId");

                    b.HasIndex("StartTime")
                        .HasName("IX_starttime");

                    b.HasIndex("FacId", "StartTime")
                        .HasName("IX_facid_starttime");

                    b.HasIndex("MemId", "FacId")
                        .HasName("IX_memid_facid");

                    b.HasIndex("MemId", "StartTime")
                        .HasName("IX_memid_starttime");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("EFCorePgExercises.Entities.Facility", b =>
                {
                    b.Property<int>("FacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 0)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GuestCost")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("InitialOutlay")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("MemberCost")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("MonthlyMaintenance")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("FacId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("EFCorePgExercises.Entities.Member", b =>
                {
                    b.Property<int>("MemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 0)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RecommendedBy")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("MemId");

                    b.HasIndex("JoinDate")
                        .HasName("IX_JoinDate");

                    b.HasIndex("RecommendedBy")
                        .HasName("IX_RecommendedBy");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("EFCorePgExercises.Entities.Booking", b =>
                {
                    b.HasOne("EFCorePgExercises.Entities.Facility", "Facility")
                        .WithMany("Bookings")
                        .HasForeignKey("FacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCorePgExercises.Entities.Member", "Member")
                        .WithMany("Bookings")
                        .HasForeignKey("MemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCorePgExercises.Entities.Member", b =>
                {
                    b.HasOne("EFCorePgExercises.Entities.Member", "Recommender")
                        .WithMany("Children")
                        .HasForeignKey("RecommendedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
